{"version":3,"sources":["src/scripts/projecList.js","src/scripts/main.js"],"names":["projectList","id","name","img","images","tags","url","gh","description","Object","freeze","app","Vue","createApp","data","component","props","template","modalOpen","windowEventListener","watch","isModalOpen","window","addEventListener","e","key","removeEventListener","directives","mounted","document","body","classList","add","unmounted","remove","mount","querySelector","scroll","getBoundingClientRect","y","scrollTo","pageYOffset"],"mappings":";;;;;;;;;;;;;;;;;;;AAwGeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAtGf,IAAA,EAAA,EAAA,QAAA,oBAsGeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GApGf,IAAMA,EAAc,CAClB,CACEC,GAAI,QACJC,KAAM,qBACNC,IAAKC,EAAO,QAAA,yBACZC,KAAM,CAAC,QAAS,OAAQ,UACxBC,IAAK,0FACLC,GAAI,sGACJC,YAAW,00BASb,CACEP,GAAI,QACJC,KAAM,iBACNC,IAAKC,EAAO,QAAA,qBACZC,KAAM,CAAC,QAAS,cAAe,QAC/BC,IAAK,sFACLC,GAAI,kGACJC,YAAW,69BASb,CACEP,GAAI,QACJC,KAAM,UACNC,IAAKC,EAAO,QAAP,WACLC,KAAM,CAAC,aAAc,UAAW,MAAO,cACvCC,IAAK,4CACLC,GAAI,8CACJC,YAAW,0wBASb,CACEP,GAAI,QACJC,KAAM,uBACNC,IAAKC,EAAO,QAAA,2BACZC,KAAM,CAAC,OAAQ,OAAQ,cACvBC,IAAK,8FACLC,GAAI,0GACJC,YAAW,grBASb,CACEP,GAAI,QACJC,KAAM,iBACNC,IAAKC,EAAO,QAAA,qBACZC,KAAM,CAAC,aAAc,QAAS,YAC9BC,IAAK,qFACLC,GAAI,iGACJC,YAAW,0wBASb,CACEP,GAAI,QACJC,KAAM,mBACNC,IAAKC,EAAO,QAAA,uBACZC,KAAM,CAAC,UAAW,aAAc,YAChCC,IAAK,kDACLC,GAAI,uGACJC,YAAW,2qBAUfC,OAAOC,OAAOV,GAECA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACXf,aA7FA,IAAA,EAAA,EAAA,QAAA,iBA6FA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA3FA,IAAMW,EAAMC,IAAIC,UAAU,CACxBC,KAAO,WACE,MAAA,CACLd,YAAAA,EAAAA,YAKNW,EAAII,UAAU,eAAgB,CAC5BC,MAAO,CAAC,KAAM,OAAQ,MAAO,OAAQ,MAAO,KAAM,eAClDC,SAF4B,8lEAoD5BH,KAAO,WACE,MAAA,CACLI,WAAW,EACXC,oBAAqB,OAGzBC,MAAO,CACLF,UAAUG,SAAAA,GAAa,IAAA,EAAA,KACjBA,EACGF,KAAAA,oBAAsBG,OAAOC,iBAAiB,QAAS,SAACC,GAC7C,WAAVA,EAAEC,MAAkB,EAAKP,WAAY,KAG3CI,OAAOI,oBAAoB,QAAS,KAAKP,uBAI/CQ,WAAY,CACQ,iBAAA,CAChBC,QAAU,WACRC,SAASC,KAAKC,UAAUC,IAAI,cAE9BC,UAAY,WACVJ,SAASC,KAAKC,UAAUG,OAAO,kBAMvCvB,EAAIwB,MAAM,iBAEVN,SAASO,cAAc,uBAAuBb,iBAAiB,QAAS,WAChEc,IAAAA,EAASR,SAASO,cAAc,aAAaE,wBAAwBC,EAC3EjB,OAAOkB,SAAS,EAAGH,EAASf,OAAOmB","file":"main.706fda73.js","sourceRoot":"..","sourcesContent":["/* eslint-disable dot-notation */\n// eslint-disable-next-line import/no-unresolved\nimport images from '../assets/*.png';\n\nconst projectList = [\n  {\n    id: 'fe-mp',\n    name: 'Markdown Previewer',\n    img: images['sh_markdown-previewer'],\n    tags: ['React', 'SCSS', 'Marked'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/front-end-libraries/markdown-previewer/',\n    gh: 'https://github.com/theforbiddenpool/fcc-projects/tree/master/front-end-libraries/markdown-previewer',\n    description: `\n      <p>\n        It was my first React project. It was done as one of the <a href=\"https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer\">FreeCodeCamp challenges</a> for the Frontend Libraries Certification.\n      </p>\n      <p>\n        The goal of this project was to build a live markdown previewer. Marked was the markdown compiler used for the parsing. Most of my work was put into building the interface. I wanted to have two movable \"windows\" - one for the editor, the other for the previewer - with the style reminiscent of Windows 98. Being my first React project, it was probably one of the FreeCodeCamp projects I struggled the most with. I remember searching for hours on how I could make movable divs - and it most definitely needs improvement.\n      </p>\n    `,\n  },\n  {\n    id: 'fe-pc',\n    name: 'Pomodoro Clock',\n    img: images['sh_pomodoro-clock'],\n    tags: ['React', 'React Hooks', 'SCSS'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/front-end-libraries/pomodoro-clock/',\n    gh: 'https://github.com/theforbiddenpool/fcc-projects/tree/master/front-end-libraries/pomodoro-clock',\n    description: `\n      <p>\n        The <a href=\"https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-25--5-clock\">Pomodoro Clock project</a> was the last project of the Front End Libraries FCC Certification. It was my first time using a custom React Hook. I didn't learn about them in FreeCodeCamp, but they seemed the \"new default\" for React, so I decided to try them out.\n      </p>\n      <p>\n        I wanted the timer to be as precise as possible, and I remember reading about <code>setTimeout</code> and <code>setInterval</code> not being entirely accurate. In one of my previous personal projects, I'd built a accurate timer using <code>setTimeout</code> and a drift calculated with <code>Date.now()</code> and an expected variable. But React brought challenges I wasn't expecting, and my inexperience with it certainly didn't help. Eventually I was able to make it work as I wanted, with the ability to start and stop the timer.\n      </p>\n    `,\n  },\n  {\n    id: 'fe-et',\n    name: 'Ethmoid',\n    img: images['sh_ethmoid'],\n    tags: ['TypeScript', 'Webpack', 'BEM', 'FileReader'],\n    url: 'https://www.theforbiddenpool.com/ethmoid/',\n    gh: 'https://github.com/theforbiddenpool/ethmoid',\n    description: `\n      <p>\n        In one of my freelance projects I was required to work with the <a href=\"https://github.com/gitbrent/PptxGenJS/\">PptxGenJS</a> library. To learn how to use it I made this project.\n      </p>\n      <p>\n        I had also just started learning TypeScript, and had read about BEM. It seemed like the perfect opportunity to put some of my knowledge in work. Besides taking in data, and shooting out a PowerPoint, I added some customization options, which forced me to work with the <code>FileReader</code> Browser API. I would also have liked to be able to add a previewer, but after hours of investigation I couldn't find a way without changing too much of my current implementation. I hope one day to be able to implement such thing.\n      </p>\n    `,\n  },\n  {\n    id: 'rd-pl',\n    name: 'Product Landing Page',\n    img: images['sh_product-landing-page'],\n    tags: ['HTML', 'SCSS', 'JavaScript'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/responsive-web-design/product-landing-page/',\n    gh: 'https://github.com/theforbiddenpool/fcc-projects/tree/master/responsive-web-design/product-landing-page',\n    description: `\n      <p>\n        It was one of the first projects I've ever built for FreeCodeCamp. This was the <a href=\"https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-product-landing-page\">3rd project</a> for the first FCC certification.\n      </p>\n      <p>\n        It's honestly amazing how much I've evolved as a developer since then. In this case, this is a product landing page for trombones. I built my own scrollspy with a bit of JavaScript. The rest of the project is just good old plain HTML and SCSS. At the time, this was the best I could do, but now I can see so many places where I could improve this project.\n      </p>\n    `,\n  },\n  {\n    id: 'dv-cm',\n    name: 'Choropleth Map',\n    img: images['sh_choropleth-map'],\n    tags: ['JavaScript', 'D3.js', 'topojson'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/data-visualization/choropleth-map/',\n    gh: 'https://github.com/theforbiddenpool/fcc-projects/tree/master/data-visualization/choropleth-map',\n    description: `\n      <p>\n        The Choropleth Map project is part of the <a href=\"https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map\">D3.js FreeCodeCamp module</a>. It is the 4th challenge.\n      </p>\n      <p>\n        This was my first time working with creating paths with D3.js. I had been working with D3 for a few weeks, and the previous projects were all kinda similar. It took me out of the routine of creating a <code>rect</code> or <code>circle</code>, and placing it on the SVG. I also put a bit more effort into the look of the website itself. It was surprisingly hard to wrap my head around <code>topojson</code> and how D3.js created the paths. Creating the label was also not easy.\n      </p>\n    `,\n  },\n  {\n    id: 'am-et',\n    name: 'Exercise Tracker',\n    img: images['sh_exercise-tracker'],\n    tags: ['Node.js', 'Express.js', 'Mongoose'],\n    url: 'https://tfp-fcc-exercise-tracker.herokuapp.com/',\n    gh: 'https://github.com/theforbiddenpool/fcc-projects/tree/master/apis-and-microservices/exercise-tracker',\n    description: `\n      <p>\n        The Exercise Tracker project is part of the <a href=\"https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/exercise-tracker\">APIs and Microservices FreeCodeCamp</a> module. \n      </p>\n      <p>\n        It was the first backend project I struggled a lot with. I had to use Mongoose functionalities I hadn't previously worked with. But it taught me a lot about using Mongoose and Express. I got to try <code>express.Router()</code> for the first time and to use a better architecture. Overall, I think it works really well. Some time after I finished FCC, I decided to build a better frontend for it.\n      </p>\n    `,\n  },\n];\nObject.freeze(projectList);\n\nexport default projectList;\n","import projectList from './projecList';\n\nconst app = Vue.createApp({\n  data() {\n    return {\n      projectList,\n    };\n  },\n});\n\napp.component('project-card', {\n  props: ['id', 'name', 'img', 'tags', 'url', 'gh', 'description'],\n  template: `\n    <li class=\"card\" @click=\"modalOpen = true\">\n      <img class=\"card-img\" :src=\"img\" :alt=\"name + ' screenshot'\">\n      <div class=\"title card-title\">\n        <span class=\"bracket\" aria-hidden=\"true\">&#60;</span>\n        {{ name }}\n        <span class=\"bracket\" aria-hidden=\"true\">&#47;&#62;</span>\n      </div>\n      <div class=\"card-tags\" aria-label=\"technologies used\">\n        <span class=\"tag\" v-for=\"tg in tags\">\n          {{ tg }}\n        </span>\n      </div>\n    </li>\n\n    <teleport to=\"body\">\n      <div v-if=\"modalOpen\" v-body-no-scroll class=\"modal modal-full\" @click.self=\"modalOpen = false\">\n        <div class=\"modal-inner\">\n          <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"modalOpen = false\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n            </button>\n          </div>\n          <div class=\"modal-content\">\n            <div class=\"modal-title title\">\n              <h1>{{ name }}</h1>\n            </div>\n            <div class=\"modal-img-group\">\n              <img class=\"modal-img\" :src=\"img\" :alt=\"name + ' screenshot'\">\n              <div class=\"external-link\">\n                <a :href=\"gh\" title=\"GitHub repository\" aria-label=\"GitHub repo\">\n                  <i class=\"fab fa-github fa-lg\"></i>\n                </a>\n                <a v-if=\"url !== ''\" :href=\"url\" title=\"View project\" aria-label=\"Visit project's website\">\n                  <i class=\"fas fa-external-link-alt fa-lg\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"modal-tags\" aria-label=\"technologies used\">\n              <span class=\"tag\" v-for=\"tg in tags\">\n                {{ tg }}\n              </span>\n            </div>\n            <div class=\"modal-text\" v-html=\"description\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </teleport>\n  `,\n  data() {\n    return {\n      modalOpen: false,\n      windowEventListener: null,\n    };\n  },\n  watch: {\n    modalOpen(isModalOpen) {\n      if (isModalOpen) {\n        this.windowEventListener = window.addEventListener('keyup', (e) => {\n          if (e.key === 'Escape') this.modalOpen = false;\n        });\n      } else {\n        window.removeEventListener('keyup', this.windowEventListener);\n      }\n    },\n  },\n  directives: {\n    'body-no-scroll': {\n      mounted() {\n        document.body.classList.add('no-scroll');\n      },\n      unmounted() {\n        document.body.classList.remove('no-scroll');\n      },\n    },\n  },\n});\n\napp.mount('#vue-projects');\n\ndocument.querySelector('#move-down > button').addEventListener('click', () => {\n  const scroll = document.querySelector('#projects').getBoundingClientRect().y;\n  window.scrollTo(0, scroll + window.pageYOffset);\n});\n"]}