{"version":3,"sources":["src/scripts/projecList.js","src/scripts/main.js"],"names":["projectList","id","name","img","images","tags","url","description","Object","freeze","app","Vue","createApp","data","component","props","template","modalOpen","directives","mounted","document","body","classList","add","unmounted","remove","vm","mount","querySelector","addEventListener","scroll","getBoundingClientRect","y","window","scrollTo","pageYOffset"],"mappings":";;;;;;;;;;;;;;;;;;;AAiGeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAhGf,IAAA,EAAA,EAAA,QAAA,uBAgGeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA9Ff,IAAMA,EAAc,CAClB,CACEC,GAAI,QACJC,KAAM,qBACNC,IAAKC,EAAO,QAAA,yBACZC,KAAM,CAAC,QAAS,OAAQ,UACxBC,IAAK,0FACLC,YAAW,00BASb,CACEN,GAAI,QACJC,KAAM,iBACNC,IAAKC,EAAO,QAAA,qBACZC,KAAM,CAAC,QAAS,cAAe,QAC/BC,IAAK,sFACLC,YAAW,69BASb,CACEN,GAAI,QACJC,KAAM,wBACNC,IAAKC,EAAO,QAAA,4BACZC,KAAM,CAAC,QAAS,QAChBC,IAAK,6FACLC,YAAW,8xBASb,CACEN,GAAI,QACJC,KAAM,uBACNC,IAAKC,EAAO,QAAA,2BACZC,KAAM,CAAC,OAAQ,OAAQ,cACvBC,IAAK,8FACLC,YAAW,grBASb,CACEN,GAAI,QACJC,KAAM,iBACNC,IAAKC,EAAO,QAAA,qBACZC,KAAM,CAAC,aAAc,QAAS,YAC9BC,IAAK,qFACLC,YAAW,0wBASb,CACEN,GAAI,QACJC,KAAM,mBACNC,IAAKC,EAAO,QAAA,uBACZC,KAAM,CAAC,UAAW,aAAc,YAChCC,IAAK,uCACLC,YAAW,snBAUfC,OAAOC,OAAOT,GAECA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACrBf,aA5EA,IAAA,EAAA,EAAA,QAAA,iBA4EA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1EA,IAAMU,EAAMC,IAAIC,UAAU,CACxBC,KAAO,WACE,MAAA,CACLb,YAAAA,EAAAA,YAKNU,EAAII,UAAU,eAAgB,CAC5BC,MAAO,CAAC,KAAM,OAAQ,MAAO,OAAQ,MAAO,eAC5CC,SAF4B,o2DA+C5BH,KAAO,WACE,MAAA,CACLI,WAAW,IAGfC,WAAY,CACQ,iBAAA,CAChBC,QAAU,WACRC,SAASC,KAAKC,UAAUC,IAAI,cAE9BC,UAAY,WACVJ,SAASC,KAAKC,UAAUG,OAAO,kBAMvC,IAAMC,EAAKhB,EAAIiB,MAAM,iBAErBP,SAASQ,cAAc,uBAAuBC,iBAAiB,QAAS,WAChEC,IAAAA,EAASV,SAASQ,cAAc,aAAaG,wBAAwBC,EAC3EC,OAAOC,SAAS,EAAGJ,EAASG,OAAOE","file":"main.0d2d4fad.js","sourceRoot":"..","sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport images from '../../assets/*.png';\n\nconst projectList = [\n  {\n    id: 'fe-mp',\n    name: 'Markdown Previewer',\n    img: images['sh_markdown-previewer'],\n    tags: ['React', 'SCSS', 'Marked'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/front-end-libraries/markdown-previewer/',\n    description: `\n      <p>\n        It was my first React project. It was done as one of the <a href=\"https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer\">FreeCodeCamp challenges</a> for the Frontend Libraries Certification.\n      </p>\n      <p>\n        The goal of this project was to build a live markdown previewer. Marked was the markdown compiler used for the parsing. Most of my work was put into building the interface. I wanted to have two movable \"windows\" - one for the editor, the other for the previewer - with the style reminiscent of Windows 98. Being my first React project, it was probably one of the FreeCodeCamp projects I struggled the most with. I remember searching for hours on how I could make movable divs - and it most definitely needs improvement.\n      </p>\n    `,\n  },\n  {\n    id: 'fe-pc',\n    name: 'Pomodoro Clock',\n    img: images['sh_pomodoro-clock'],\n    tags: ['React', 'React Hooks', 'SCSS'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/front-end-libraries/pomodoro-clock/',\n    description: `\n      <p>\n        The <a href=\"https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-25--5-clock\">Pomodoro Clock project</a> was the last project of the Front End Libraries FCC Certification. It was my first time using a custom React Hook. I didn't learn about them in FreeCodeCamp, but they seemed the \"new default\" for React, so I decided to try them out.\n      </p>\n      <p>\n        I wanted the timer to be as precise as possible, and I remember reading about <code>setTimeout</code> and <code>setInterval</code> not being entirely accurate. In one of my previous personal projects, I'd built a accurate timer using <code>setTimeout</code> and a drift calculated with <code>Date.now()</code> and an expected variable. But React brought challenges I wasn't expecting, and my inexperience with it certainly didn't help. Eventually I was able to make it work as I wanted, with the ability to start and stop the timer.\n      </p>\n    `,\n  },\n  {\n    id: 'fe-jc',\n    name: 'JavaScript Calculator',\n    img: images['sh_javascript-calculator'],\n    tags: ['React', 'SCSS'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/front-end-libraries/javascript-calculator/',\n    description: `\n      <p>\n        This project is the <a href=\"https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-javascript-calculator\">4th project</a> of the FreeCodeCamp Front End Libraries Projects Certification. The goal was to build a calculator. Seemed simple enough, right?\n      </p>\n      <p>\n        I only had used React once in my <a href=\"https://theforbiddenpool.github.io/fcc-projects/front-end-libraries/markdown-previewer/\">Markdown Previewer project</a>, so the knowledge was still very raw. The idea of building a calculator seemed easy, but every time I thought I had it right there was another edge case I needed to cover. I had a great time with it. In the future, I want to go through the code and see what I can improve.\n      </p>\n    `,\n  },\n  {\n    id: 'rd-pl',\n    name: 'Product Landing Page',\n    img: images['sh_product-landing-page'],\n    tags: ['HTML', 'SCSS', 'JavaScript'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/responsive-web-design/product-landing-page/',\n    description: `\n      <p>\n        It was one of the first projects I've ever built for FreeCodeCamp. This was the <a href=\"https://www.freecodecamp.org/learn/responsive-web-design/responsive-web-design-projects/build-a-product-landing-page\">3rd project</a> for the first FCC certification.\n      </p>\n      <p>\n        It's honestly amazing how much I've evolved as a developer since then. In this case, this is a product landing page for trombones. I built my own scrollspy with a bit of JavaScript. The rest of the project is just good old plain HTML and SCSS. At the time, this was the best I could do, but now I can see so many places where I could improve this project.\n      </p>\n    `,\n  },\n  {\n    id: 'dv-cm',\n    name: 'Choropleth Map',\n    img: images['sh_choropleth-map'],\n    tags: ['JavaScript', 'D3.js', 'topojson'],\n    url: 'https://theforbiddenpool.github.io/fcc-projects/data-visualization/choropleth-map/',\n    description: `\n      <p>\n        The Choropleth Map project is part of the <a href=\"https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map\">D3.js FreeCodeCamp module</a>. It is the 4th challenge.\n      </p>\n      <p>\n        This was my first time working with creating paths with D3.js. I had been working with D3 for a few weeks, and the previous projects were all kinda similar. It took me out of the routine of creating a <code>rect</code> or <code>circle</code>, and placing it on the SVG. I also put a bit more effort into the look of the website itself. It was surprisingly hard to wrap my head around <code>topojson</code> and how D3.js created the paths. Creating the label was also not easy.\n      </p>\n    `,\n  },\n  {\n    id: 'am-et',\n    name: 'Exercise Tracker',\n    img: images['sh_exercise-tracker'],\n    tags: ['Node.js', 'Express.js', 'Mongoose'],\n    url: 'https://guillermo-meardon.glitch.me/',\n    description: `\n      <p>\n        The Exercise Tracker project is part of the <a href=\"https://www.freecodecamp.org/learn/apis-and-microservices/apis-and-microservices-projects/exercise-tracker\">APIs and Microservices FreeCodeCamp</a> module. \n      </p>\n      <p>\n        It was the first backend project I struggled a lot with. I had to use Mongoose functionalities I hadn't previously worked with. But it taught me a lot about using Mongoose and Express. I got to try <code>express.Router()</code> for the first time. Overall, I think it works really well. I hope one day to build a better frontend to go with it.\n      </p>\n    `,\n  },\n];\nObject.freeze(projectList);\n\nexport default projectList;\n","import projectList from './projecList';\n\nconst app = Vue.createApp({\n  data() {\n    return {\n      projectList,\n    };\n  },\n});\n\napp.component('project-card', {\n  props: ['id', 'name', 'img', 'tags', 'url', 'description'],\n  template: `\n    <li class=\"card\" @click=\"modalOpen = true\">\n      <img class=\"card-img\" :src=\"img\" :alt=\"name + ' screenshot'\">\n      <div class=\"title card-title\">\n        <span class=\"bracket\" aria-hidden=\"true\">&#60;</span>\n        {{ name }}\n        <span class=\"bracket\" aria-hidden=\"true\">&#47;&#62;</span>\n      </div>\n      <div class=\"card-tags\" aria-label=\"technologies used\">\n        <span class=\"tag\" v-for=\"tg in tags\">\n          {{ tg }}\n        </span>\n      </div>\n    </li>\n\n    <teleport to=\"body\">\n      <div v-if=\"modalOpen\" v-body-no-scroll class=\"modal modal-full\" @click.self=\"modalOpen = false\">\n        <div class=\"modal-inner\">\n          <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"modalOpen = false\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n            </button>\n          </div>\n          <div class=\"modal-content\">\n            <div class=\"modal-title title\">\n              <h1>{{ name }}</h1>\n            </div>\n            <div class=\"modal-img-group\">\n              <img class=\"modal-img\" :src=\"img\" :alt=\"name + ' screenshot'\">\n              <a class=\"external-link\" :href=\"url\" aria-label=\"Visit project's website\">\n                <i class=\"fas fa-external-link-alt fa-lg\"></i>\n              </a>\n            </div>\n            <div class=\"modal-tags\" aria-label=\"technologies used\">\n              <span class=\"tag\" v-for=\"tg in tags\">\n                {{ tg }}\n              </span>\n            </div>\n            <div class=\"modal-text\" v-html=\"description\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </teleport>\n  `,\n  data() {\n    return {\n      modalOpen: false,\n    };\n  },\n  directives: {\n    'body-no-scroll': {\n      mounted() {\n        document.body.classList.add('no-scroll');\n      },\n      unmounted() {\n        document.body.classList.remove('no-scroll');\n      },\n    },\n  },\n});\n\nconst vm = app.mount('#vue-projects');\n\ndocument.querySelector('#move-down > button').addEventListener('click', () => {\n  const scroll = document.querySelector('#projects').getBoundingClientRect().y;\n  window.scrollTo(0, scroll + window.pageYOffset);\n});\n"]}